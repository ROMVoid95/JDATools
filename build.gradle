buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.22.0'
    }
}

plugins {
    id 'eclipse'
    id 'java-library'
    id "com.github.ben-manes.versions" version "0.42.0"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'signing'
}

apply plugin: "com.vanniktech.maven.publish"

def baseVersion = "3.0.2"
def isSnapshot = true

version = (isSnapshot) ? baseVersion + '-SNAPSHOT' + getBuildNumber() : baseVersion
group = 'com.readonlydev'
archivesBaseName = 'jdatools'

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.apache.tools.ant.filters.ReplaceTokens

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

def javaVersion = JavaVersion.VERSION_17

configurations {
    resolveableImpl {
        transitive = true
        canBeResolved = true
    }
    api.extendsFrom resolveableImpl
}

apply from: 'dependencies.gradle'

repositories {
    mavenCentral()
}

dependencies {
    resolveableImpl jda()
    resolveableImpl guava()
    resolveableImpl lang3()
    resolveableImpl json()
    resolveableImpl jacksonCore()
    resolveableImpl jacksonDatabind()
    resolveableImpl jacksonAnnotations()

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

def projectVersion = version.toString()
if(projectVersion.endsWith("SNAPSHOT")) {
    projectVersion = projectVersion.replace("-", ".")
}
def splitVerison = projectVersion.tokenize(".")

task sourcesForRelease(type: Copy) {
    from('src/main/java') {
        filter(ReplaceTokens, tokens: [
            MAJOR:	splitVerison.get(0),
            MINOR:    	splitVerison.get(1),
            PATCH:      splitVerison.get(2)
        ])
    }
    into 'build/filteredSrc'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    source = sourcesForRelease.destinationDir
    classpath += sourceSets.main.compileClasspath

    dependsOn sourcesForRelease
}

def setMainManifestProps = { Manifest manifest->
    manifest.mainAttributes ([
        'Implementation-Title':     archivesBaseName,
        'Implementation-Version':   version,
        'Implementation-Vendor':    'ReadOnly Development',
        'Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
}

task fullBuild {
    group 'jdatools'
    dependsOn 'clean'
    dependsOn 'build'
    tasks.findByName('build').mustRunAfter 'clean'
}

def majorJavaVersion = javaVersion.getMajorVersion()

javadoc {
    options.addBooleanOption('html5', true)
    options.addStringOption('Xdoclint:none', '-quiet')
    options.setWindowTitle(archivesBaseName + ' | ' + projectVersion)
    options.setDocTitle(archivesBaseName + ' | ' + projectVersion)
    options.setEncoding('UTF-8')
    options.tags 'apiNote:a:API Note:', 'implSpec:a:Implementation Requirements:', 'implNote:a:Implementation Note:'
}

shadowJar {
	archiveClassifier.set('')
}

mavenPublishing {
    signAllPublications()
}

artifacts {
    archives shadowJar
}

String getBuildNumber() {
    def versionFile = file('version.properties')
    if (versionFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        return versionProps['build_num'].toString()
    }
    return "1"
}

task incrementBuild {
    doFirst {
        def versionFile = file('version.properties')
        if (versionFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionFile))
            def num = versionProps['build_num'].toInteger() + 1
            println("incrementing BuildNumber to: " + num)
            versionProps['build_num'] = num.toString()
            versionProps.store(versionFile.newWriter(), null)
        } else {
            println("version.properties file not found! Ignoring.")
        }
    }
}

//gradle.startParameter.excludedTaskNames += [ "javaSourcesJar", "simpleJavadocJar" ]

tasks.publishToMavenLocal.finalizedBy incrementBuild
