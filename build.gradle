plugins {
	id 'maven-publish'
	id 'java-library'
    id 'eclipse'
    id 'signing'
	alias(libs.plugins.versions)
	alias(libs.plugins.licenser)
	alias(libs.plugins.lombok)
}

wrapper {
	gradleVersion = '8.1.1'
}

def baseVersion = "4.0.8"
def isSnapshot = false

version = (isSnapshot) ? baseVersion + '-SNAPSHOT' : baseVersion
group = 'io.github.readonly'
archivesBaseName = 'JDATools'

dependencyUpdates.gradleReleaseChannel="current"

java {
	withJavadocJar()
	withSourcesJar()
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

repositories {
    mavenCentral()
}

dependencies {
	api(libs.jda) { exclude module: 'opus-java' }
	implementation libs.json
	compileOnly libs.slf4j
    api libs.guava
    api libs.guice
    api libs.commons.lang3
    api libs.jackson.databind
}

license {
	header = rootProject.file("HEADER.txt")
	include '**/*.java'
}

tasks.withType(JavaCompile).configureEach {
	classpath += sourceSets.main.compileClasspath
	options.deprecation = true
	options.encoding = 'UTF-8'
}

javadoc {
    options.addBooleanOption('html5', true)
    options.addStringOption('Xdoclint:none', '-quiet')
    options.setWindowTitle(archivesBaseName + ' | ' + version)
    options.setDocTitle(archivesBaseName + ' | ' + version)
    options.setEncoding('UTF-8')
    options.tags 'apiNote:a:API Note:', 'implSpec:a:Implementation Requirements:', 'implNote:a:Implementation Note:'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        	from components.java
        	groupId = 'com.github.ReadOnlyDevelopment'
        }
        mavenSnapshot(MavenPublication) {
            from components.java
            version = "master-SNAPSHOT"
            groupId = 'com.github.ReadOnlyDevelopment'
        }

    }
}

checkLicenseMain.dependsOn licenseFormat
